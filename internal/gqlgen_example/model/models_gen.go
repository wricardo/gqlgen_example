// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"
)

type BasicRecord interface {
	IsBasicRecord()
}

type CreateUserInput struct {
	FirstName      string `json:"firstName"`
	LastName       string `json:"lastName"`
	Email          string `json:"email"`
	OrganizationID string `json:"organizationId"`
}

type Organization struct {
	ID        string     `json:"id"`
	Name      string     `json:"name"`
	Deleted   bool       `json:"deleted"`
	CreatedBy *User      `json:"createdBy"`
	UpdatedBy *User      `json:"updatedBy"`
	CreatedAt time.Time  `json:"createdAt"`
	UpdatedAt *time.Time `json:"updatedAt"`
}

func (Organization) IsBasicRecord() {}

type Pagination struct {
	Page          int  `json:"page"`
	Size          int  `json:"size"`
	TotalElements int  `json:"totalElements"`
	TotalPages    int  `json:"totalPages"`
	First         bool `json:"first"`
	Last          bool `json:"last"`
}

type User struct {
	ID           string        `json:"id"`
	FirstName    string        `json:"firstName"`
	LastName     string        `json:"lastName"`
	Email        string        `json:"email"`
	Organization *Organization `json:"organization"`
	Deleted      bool          `json:"deleted"`
	CreatedBy    *User         `json:"createdBy"`
	UpdatedBy    *User         `json:"updatedBy"`
	CreatedAt    time.Time     `json:"createdAt"`
	UpdatedAt    *time.Time    `json:"updatedAt"`
}

func (User) IsBasicRecord() {}

type UsersPage struct {
	Users      []User      `json:"users"`
	Pagination *Pagination `json:"pagination"`
}
